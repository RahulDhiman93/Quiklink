{{template "base" .}}

{{define "content"}}
<div class="container">
    <div class="logo-and-title">
        <img src="/static/images/quiklink.png" width="35px" height="35px" alt="Logo">
        <h1>Quiklink</h1>
    </div>
    <p>Enter a URL to get a shortened link:</p>
    <div class="input-group mb-3">
        <input type="text" id="originalUrl" class="form-control" placeholder="Enter URL" aria-label="Enter URL" aria-describedby="shortenButton">
        <div class="input-group-append">
            <button class="btn btn-primary" type="button" id="shortenButton">Shorten</button>
        </div>
    </div>
    <div class="shortened-zone">
        <p class="shortened-url">
            <a id="shortenedUrl" href="#" target="_blank"></a>
        </p>
        <div id="canvas-container" style="display: none; align-content: center; align-self: center">
            <canvas id="qrImageCanvas" width="250" height="250" style="align-self: center"></canvas>
        </div>
        <button class="btn btn-secondary" type="button" id="copyButton" style="display: none">Copy</button>
    </div>
</div>
{{end}}

{{define "js"}}
<script>
    document.getElementById("shortenButton").addEventListener("click", function () {
        const originalUrl = document.getElementById("originalUrl").value.toLowerCase();
        var copyButton = document.getElementById("copyButton");

        if (!isURL(originalUrl)) {
            copyButton.style.display = "none"
            document.getElementById("originalUrl").value = "";
            document.getElementById("shortenedUrl").href = "#!";
            document.getElementById("shortenedUrl").textContent = "";
            alert("Enter a valid URL");
            return
        }

        const url = '/shorten';
        const data = {
            long_url: originalUrl
        };

        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
        })
            .then(response => response.json())
            .then(data => {
                const shortenedUrl = data["short_url"];

                copyButton.style.display = "inline"
                document.getElementById("shortenedUrl").href = shortenedUrl;
                document.getElementById("shortenedUrl").textContent = shortenedUrl;

                setQrImage(data["qrcode"])

                const shortenedZone = document.querySelector('.shortened-zone');
                shortenedZone.classList.add('show');
            })
            .catch(error => {
                console.error('Error:', error);
            });
    });

    document.getElementById("copyButton").addEventListener("click", function () {
        const shortenedUrl = document.getElementById("shortenedUrl");
        const textArea = document.createElement("textarea");
        textArea.value = shortenedUrl.textContent;
        document.body.appendChild(textArea);
        textArea.select();
        document.execCommand("copy");
        document.body.removeChild(textArea);
        alert("Copied to clipboard");
    });

    checkUrlForRedirection()

    function isURL(text) {
        if (!text.includes("http") || !text.includes("https")) {
            return false
        }
        const urlPattern = /^(https?:\/\/)?([\w.-]+)\.([a-zA-Z]{2,})(\S*)$/;
        return urlPattern.test(text);
    }

    function setQrImage(data) {
        const bytes = data;
        const canvasContainer = document.getElementById("canvas-container");
        const canvas = document.getElementById("qrImageCanvas");
        const ctx = canvas.getContext("2d");
        const image = new Image();
        image.src = "data:image/png;base64," + bytes;
        image.onload = function() {
            ctx.drawImage(image, 0, 0);
            canvasContainer.style.display = "block";
        };
    }

    function checkUrlForRedirection() {
        {{$err := index .StringMap "url_not_found"}}
        {{if eq $err "url_not_found"}}
            alert("Unable to find the URL!!!");
        {{end}}
    }
</script>
{{end}}